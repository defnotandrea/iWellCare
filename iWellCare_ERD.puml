@startuml iWellCare_ERD

!define table(x) class x << (T,#FFAAAA) >>
!define primary_key(x) <b>x</b>
!define foreign_key(x) <i>x</i>

title iWellCare Healthcare Management System - Entity Relationship Diagram

' User Management
table(users) {
    primary_key(id) : bigint
    username : varchar(255)
    email : varchar(255)
    password : varchar(255)
    first_name : varchar(255)
    last_name : varchar(255)
    middle_name : varchar(255)
    date_of_birth : date
    gender : enum
    phone_number : varchar(255)
    street_address : text
    city : varchar(255)
    state_province : varchar(255)
    postal_code : varchar(255)
    country : varchar(255)
    role : enum
    is_active : boolean
    profile_photo : varchar(255)
    email_verified_at : timestamp
    remember_token : varchar(100)
    created_at : timestamp
    updated_at : timestamp
}

' OTP Management
table(otp_codes) {
    primary_key(id) : bigint
    email : varchar(255)
    code : varchar(255)
    type : varchar(255)
    expires_at : timestamp
    is_used : boolean
    created_at : timestamp
    updated_at : timestamp
}

' Doctor Profile
table(doctors) {
    primary_key(id) : bigint
    foreign_key(user_id) : bigint
    specialization : varchar(255)
    license_number : varchar(255)
    years_of_experience : integer
    qualifications : text
    bio : text
    status : enum
    consultation_fee : decimal(10,2)
    available_days : json
    available_hours : json
    contact_number : varchar(255)
    emergency_contact : varchar(255)
    address : text
    city : varchar(255)
    state : varchar(255)
    postal_code : varchar(255)
    country : varchar(255)
    created_at : timestamp
    updated_at : timestamp
}

' Patient Profile
table(patients) {
    primary_key(id) : bigint
    foreign_key(user_id) : bigint
    first_name : varchar(255)
    last_name : varchar(255)
    contact : varchar(255)
    email : varchar(255)
    address : text
    date_of_birth : date
    gender : enum
    blood_type : varchar(10)
    emergency_contact : varchar(255)
    emergency_contact_phone : varchar(255)
    medical_history : text
    allergies : text
    current_medications : text
    insurance_provider : varchar(255)
    insurance_number : varchar(255)
    registration_date : timestamp
    is_active : boolean
    created_at : timestamp
    updated_at : timestamp
}

' Appointments
table(appointments) {
    primary_key(id) : bigint
    foreign_key(patient_id) : bigint
    foreign_key(doctor_id) : bigint
    appointment_date : date
    appointment_time : datetime
    type : varchar(255)
    status : enum
    notes : text
    symptoms : text
    priority : enum
    duration : integer
    room_number : varchar(255)
    foreign_key(created_by) : bigint
    foreign_key(updated_by) : bigint
    created_at : timestamp
    updated_at : timestamp
}

' Consultations
table(consultations) {
    primary_key(id) : bigint
    foreign_key(appointment_id) : bigint
    foreign_key(patient_id) : bigint
    foreign_key(doctor_id) : bigint
    consultation_date : date
    consultation_time : datetime
    status : enum
    chief_complaint : text
    present_illness : text
    past_medical_history : text
    family_history : text
    social_history : text
    clinical_measurements : json
    physical_examination : json
    diagnosis : json
    treatment_plan : json
    prescription_notes : text
    follow_up_date : date
    follow_up_notes : text
    consultation_notes : text
    medications : json
    allergies : json
    foreign_key(created_by) : bigint
    foreign_key(updated_by) : bigint
    created_at : timestamp
    updated_at : timestamp
}

' Prescriptions
table(prescriptions) {
    primary_key(id) : bigint
    foreign_key(patient_id) : bigint
    foreign_key(doctor_id) : bigint
    foreign_key(consultation_id) : bigint
    prescription_date : date
    prescription_number : varchar(255)
    diagnosis : text
    notes : text
    status : enum
    valid_until : date
    total_amount : decimal(10,2)
    payment_status : enum
    created_at : timestamp
    updated_at : timestamp
}

' Prescription Medications
table(prescription_medications) {
    primary_key(id) : bigint
    foreign_key(prescription_id) : bigint
    medication_name : varchar(255)
    dosage : varchar(255)
    frequency : varchar(255)
    duration : varchar(255)
    quantity : integer
    instructions : text
    created_at : timestamp
    updated_at : timestamp
}

' Medical Records
table(medical_records) {
    primary_key(id) : bigint
    foreign_key(patient_id) : bigint
    foreign_key(doctor_id) : bigint
    foreign_key(consultation_id) : bigint
    record_date : date
    record_type : enum
    title : varchar(255)
    description : text
    diagnosis : text
    treatment_plan : text
    medications : json
    allergies : json
    clinical_measurements : json
    lab_results : json
    imaging_results : json
    notes : text
    status : enum
    file_path : varchar(255)
    file_name : varchar(255)
    file_size : bigint
    file_type : varchar(255)
    created_at : timestamp
    updated_at : timestamp
}

' Inventory Management
table(inventory) {
    primary_key(id) : bigint
    name : varchar(255)
    description : text
    category : varchar(255)
    quantity : integer
    reorder_level : integer
    expiration_date : date
    unit_price : decimal(10,2)
    supplier : varchar(255)
    location : varchar(255)
    batch_number : varchar(255)
    notes : text
    foreign_key(created_by) : bigint
    foreign_key(updated_by) : bigint
    is_active : boolean
    archived : boolean
    created_at : timestamp
    updated_at : timestamp
}

' Inventory Logs
table(inventory_logs) {
    primary_key(id) : bigint
    foreign_key(item_id) : bigint
    adjustment_quantity : integer
    notes : text
    foreign_key(adjusted_by) : bigint
    adjusted_at : timestamp
    created_at : timestamp
    updated_at : timestamp
}

' Invoices
table(invoices) {
    primary_key(id) : bigint
    foreign_key(patient_id) : bigint
    foreign_key(appointment_id) : bigint
    invoice_no : varchar(255)
    date_issued : date
    invoice_type : varchar(255)
    article : varchar(255)
    unit_cost : decimal(10,2)
    quantity : integer
    amount : decimal(10,2)
    consultation_fee : decimal(10,2)
    medication_fee : decimal(10,2)
    other_fees : decimal(10,2)
    total_sales : decimal(10,2)
    less_sc : decimal(10,2)
    net_of_sc : decimal(10,2)
    withholding : decimal(10,2)
    grand_total : decimal(10,2)
    status : enum
    payment_date : date
    created_at : timestamp
    updated_at : timestamp
}

' Doctor Availability Settings
table(doctor_availability_settings) {
    primary_key(id) : bigint
    foreign_key(doctor_id) : bigint
    is_available : boolean
    unavailable_message : text
    unavailable_until : datetime
    status : varchar(255)
    notes : text
    foreign_key(set_by) : bigint
    created_at : timestamp
    updated_at : timestamp
}

' Sessions
table(sessions) {
    primary_key(id) : varchar(255)
    foreign_key(user_id) : bigint
    ip_address : varchar(45)
    user_agent : text
    payload : longtext
    last_activity : integer
}

' Notifications
table(notifications) {
    primary_key(id) : char(36)
    foreign_key(type) : varchar(255)
    notifiable_type : varchar(255)
    foreign_key(notifiable_id) : bigint
    data : text
    read_at : timestamp
    created_at : timestamp
    updated_at : timestamp
}

' Failed Jobs
table(failed_jobs) {
    primary_key(id) : bigint
    uuid : varchar(255)
    connection : text
    queue : text
    payload : longtext
    exception : longtext
    failed_at : timestamp
}

' Relationships

' User - OTP Codes (One-to-Many)
users "1" --o{ "0..*" otp_codes : "has"

' User - Doctor (One-to-One)
users "1" --|| "1" doctors : "has profile"

' User - Patient (One-to-One)
users "1" --|| "1" patients : "has profile"

' User - Appointments (One-to-Many as patient)
users "1" --o{ "0..*" appointments : "books"

' User - Appointments (One-to-Many as doctor)
users "1" --o{ "0..*" appointments : "conducts"

' User - Appointments (One-to-Many as creator)
users "1" --o{ "0..*" appointments : "creates"

' User - Appointments (One-to-Many as updater)
users "1" --o{ "0..*" appointments : "updates"

' User - Consultations (One-to-Many as patient)
users "1" --o{ "0..*" consultations : "receives"

' User - Consultations (One-to-Many as doctor)
users "1" --o{ "0..*" consultations : "conducts"

' User - Consultations (One-to-Many as creator)
users "1" --o{ "0..*" consultations : "creates"

' User - Consultations (One-to-Many as updater)
users "1" --o{ "0..*" consultations : "updates"

' User - Prescriptions (One-to-Many as patient)
users "1" --o{ "0..*" prescriptions : "receives"

' User - Prescriptions (One-to-Many as doctor)
users "1" --o{ "0..*" prescriptions : "prescribes"

' User - Medical Records (One-to-Many as patient)
users "1" --o{ "0..*" medical_records : "owns"

' User - Medical Records (One-to-Many as doctor)
users "1" --o{ "0..*" medical_records : "creates"

' User - Inventory (One-to-Many as creator)
users "1" --o{ "0..*" inventory : "creates"

' User - Inventory (One-to-Many as updater)
users "1" --o{ "0..*" inventory : "updates"

' User - Inventory Logs (One-to-Many as adjuster)
users "1" --o{ "0..*" inventory_logs : "adjusts"

' User - Invoices (One-to-Many as patient)
users "1" --o{ "0..*" invoices : "receives"

' User - Doctor Availability Settings (One-to-Many as doctor)
users "1" --o{ "0..*" doctor_availability_settings : "has"

' User - Doctor Availability Settings (One-to-Many as setter)
users "1" --o{ "0..*" doctor_availability_settings : "sets"

' User - Sessions (One-to-Many)
users "1" --o{ "0..*" sessions : "has"

' User - Notifications (One-to-Many)
users "1" --o{ "0..*" notifications : "receives"

' Doctor - Appointments (One-to-Many)
doctors "1" --o{ "0..*" appointments : "conducts"

' Doctor - Consultations (One-to-Many)
doctors "1" --o{ "0..*" consultations : "conducts"

' Doctor - Prescriptions (One-to-Many)
doctors "1" --o{ "0..*" prescriptions : "prescribes"

' Doctor - Medical Records (One-to-Many)
doctors "1" --o{ "0..*" medical_records : "creates"

' Patient - Appointments (One-to-Many)
patients "1" --o{ "0..*" appointments : "books"

' Patient - Consultations (One-to-Many)
patients "1" --o{ "0..*" consultations : "receives"

' Patient - Prescriptions (One-to-Many)
patients "1" --o{ "0..*" prescriptions : "receives"

' Patient - Medical Records (One-to-Many)
patients "1" --o{ "0..*" medical_records : "owns"

' Patient - Invoices (One-to-Many)
patients "1" --o{ "0..*" invoices : "receives"

' Appointment - Consultation (One-to-One)
appointments "1" --|| "1" consultations : "leads to"

' Appointment - Invoice (One-to-Many)
appointments "1" --o{ "0..*" invoices : "generates"

' Consultation - Prescription (One-to-Many)
consultations "1" --o{ "0..*" prescriptions : "results in"

' Consultation - Medical Record (One-to-Many)
consultations "1" --o{ "0..*" medical_records : "creates"

' Prescription - Prescription Medication (One-to-Many)
prescriptions "1" --o{ "0..*" prescription_medications : "contains"

' Inventory - Inventory Log (One-to-Many)
inventory "1" --o{ "0..*" inventory_logs : "tracks"

' Notes
note right of users
  <b>User Roles:</b>
  • patient
  • doctor  
  • staff
  • admin
end note

note right of appointments
  <b>Appointment Status:</b>
  • pending
  • confirmed
  • completed
  • cancelled
end note

note right of consultations
  <b>Consultation Status:</b>
  • scheduled
  • in_progress
  • completed
  • cancelled
end note

note right of prescriptions
  <b>Prescription Status:</b>
  • active
  • completed
  • cancelled
  • expired
end note

note right of inventory
  <b>Inventory Categories:</b>
  • medications
  • supplies
  • equipment
  • consumables
end note

@enduml
